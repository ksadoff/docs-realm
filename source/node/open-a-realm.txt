.. _node-open-realm:

======================
Open and Close a Realm
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Open a Synced Realm
-------------------
To open a synced {+realm+}, call :js-sdk:`Realm.open() <Realm.html#.open>`. 
Pass in a :js-sdk:`Configuration() <Realm.html#~Configuration>`
object, which must include the ``sync`` property defining a 
:js-sdk:`SyncConfiguration <Realm.Sync.html#~SyncConfiguration>` object.

For example, to open a synced {+realm+} as the authenticated user 
"authedUser", using partition "myPartition" and with a configuration that 
includes 3 :ref:`schemas <node-object-schema>`, your code might look similar to 
this:

.. code-block:: javascript

   const config = {
      schema: [schemas.TaskSchema, schemas.UserSchema, schemas.ProjectSchema],
      sync: {
         user: authedUser,
         partitionValue: myPartition,
      }
   };
    
   const realm = await Realm.open(config);

In the above example, the code shows how to open the {+realm+} *asynchronously*
by calling ``realm.open()``. You can also open a realm synchronously by passing
a ``Configuration object`` to a new instance of the :js-sdk:`Realm
<Realm.html>` object, which is necessary if the device is offline.

.. code-block:: javascript

   const realm = new Realm(config);

.. note::

   The first time a user logs on to your realm app, you should open the realm 
   *asynchronously* to sync data from the server to the device. After that initial 
   connection, you can open a realm *synchronously* to ensure the app works in 
   an offline state. 

Open a Local (Non-Synced) Realm
-------------------------------
When opening a local (non-synced) {+realm+}, you can pass a
:js-sdk:`Configuration() <Realm.html#~Configuration>` object, which may include
the path property defining the local file path to use when storing the data, to
either :js-sdk:`Realm.open() <Realm.html#.open>` or :js-sdk:`new Realm()
<Realm.App.html>`. 

.. code-block:: javascript

   const config = {
      schema: [schemas.TaskSchema, schemas.UserSchema, schemas.ProjectSchema],
      path: "./myrealm/data"
   };
    
   const realm = await Realm.open(config);

Close a Realm
-------------
It is important to remember to call the ``close()`` method when done with a 
{+realm+} instance to avoid memory leaks.

.. code-block:: javascript

   realm.close();
